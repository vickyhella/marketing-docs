1
00:00:06,000 --> 00:00:09,920
你好，欢迎使用 Rancher Desktop 的新版本

2
00:00:09,920 --> 00:00:14,080
首先我们介绍一下 Rancher Desktop，这是一款非常不错的软件

3
00:00:14,080 --> 00:00:20,960
它提供了开发容器和工作负载的本地环境

4
00:00:20,960 --> 00:00:26,960
能在 Windows，Linux 和 Mac 上运行

5
00:00:26,960 --> 00:00:29,599
支持容器管理

6
00:00:29,599 --> 00:00:31,760
你可以构建推送和拉取镜像

7
00:00:31,760 --> 00:00:34,239
软件提供了一个本地 kubernetes，你可以在里面测试微服务和工作负载

8
00:00:34,239 --> 00:00:42,160
Rancher Desktop 是基于 K3s 和 containerd 等知名项目创建的

9
00:00:42,160 --> 00:00:46,559
今天我们介绍一下 Rancher Desktop 1.3

10
00:00:46,559 --> 00:00:52,160
UI 没有太大变化

11
00:00:52,160 --> 00:00:59,120
我们的版本是 1.3.0，我们先大概看一下 UI

12
00:00:59,120 --> 00:01:04,720
这部分没有太大变化

13
00:01:04,720 --> 00:01:10,640
但是你会看到一些新的东西

14
00:01:10,640 --> 00:01:17,840
现在我们检查一下部署集群中的镜像

15
00:01:17,840 --> 00:01:25,360
这些基本上都是 K3s 之前使用的镜像

16
00:01:25,360 --> 00:01:32,560
然后我们看看怎样使用 Rancher Desktop 来拉取镜像

17
00:01:32,560 --> 00:01:38,400
我们拉取一个 BCI 镜像

18
00:01:38,400 --> 00:01:45,200
粘贴 URL，拉取镜像

19
00:01:45,200 --> 00:01:47,920
但你可以做更多事情

20
00:01:47,920 --> 00:01:50,320
我们在这里找到镜像

21
00:01:50,320 --> 00:01:52,880
然后将镜像推送到镜像仓库

22
00:01:52,880 --> 00:01:57,280
也可以扫描 CVE

23
00:01:57,280 --> 00:02:03,040
因为 BCI 是一个非常安全的镜像，所以我们找不到任何 CVE

24
00:02:03,040 --> 00:02:06,240
很酷对不，我们继续

25
00:02:06,240 --> 00:02:13,440
我们可以配置 Kubernetes，选择 containerd

26
00:02:13,440 --> 00:02:17,360
我们需要使用 nerdctl，现在来做一个测试

27
00:02:17,360 --> 00:02:19,840
我们运行一个 alpine 镜像

28
00:02:19,840 --> 00:02:23,440
连接到容器

29
00:02:23,440 --> 00:02:28,319
并执行基本的 ls 命令

30
00:02:28,319 --> 00:02:34,720
然后我们会看到，虽然我们在 CLI 上操作

31
00:02:34,720 --> 00:02:43,760
但是也能在 Rancher Desktop UI 的命名空间 default 中看到镜像

32
00:02:43,760 --> 00:02:48,560
我们再次扫描漏洞

33
00:02:48,560 --> 00:02:51,599
看起来没什么问题

34
00:02:51,599 --> 00:02:52,959
很好

35
00:02:52,959 --> 00:03:00,000
现在我们看看这个漂亮的新仪表板

36
00:03:00,000 --> 00:03:02,959
是的，现在 Rancher Desktop 有仪表板了

37
00:03:02,959 --> 00:03:04,560
而且是很酷的仪表板

38
00:03:04,560 --> 00:03:07,680
如果你之前使用过 Rancher

39
00:03:07,680 --> 00:03:13,120
你会看到非常熟悉的界面

40
00:03:13,120 --> 00:03:16,560
我们看看这个仪表板有什么内容以及支持什么操作

41
00:03:16,560 --> 00:03:18,400
首先

42
00:03:18,400 --> 00:03:21,920
是一些基本的东西，例如命名空间和节点

43
00:03:21,920 --> 00:03:27,120
这是一个开发环境，只有一个节点

44
00:03:27,120 --> 00:03:30,959
Control Plane 和 Worker

45
00:03:30,959 --> 00:03:33,519
我们看看信息

46
00:03:33,519 --> 00:03:37,519
可以看到该节点上发生了什么

47
00:03:37,519 --> 00:03:40,000
这里有大量的信息

48
00:03:40,000 --> 00:03:45,040
这里有 DaemonSet，集群中的 Deployment

49
00:03:45,040 --> 00:03:48,640
还有 Job、StatefulSet、Pod

50
00:03:48,640 --> 00:03:52,239
你可以删除一些东西

51
00:03:52,239 --> 00:03:53,760
也可以进行重新部署

52
00:03:53,760 --> 00:03:58,480
还可以与集群内部的内容进行交互

53
00:03:58,480 --> 00:04:00,560
我们来检查一下 pod

54
00:04:00,560 --> 00:04:02,560
这个 pod 不是 ready 状态

55
00:04:02,560 --> 00:04:05,599
那看看其他 pod

56
00:04:05,599 --> 00:04:10,239
例如负载均衡器，流量

57
00:04:10,239 --> 00:04:13,519
可以在这里执行 shell

58
00:04:13,519 --> 00:04:16,560
连接到 pod

59
00:04:16,560 --> 00:04:20,079
并在 pod 内执行操作

60
00:04:20,079 --> 00:04:23,280
这些都能通过这个新仪表板进行操作，很棒吧

61
00:04:23,280 --> 00:04:25,600
我个人觉得很酷

62
00:04:25,600 --> 00:04:30,160
它非常简单而且直观

63
00:04:30,160 --> 00:04:31,759
非常好

64
00:04:31,759 --> 00:04:34,880
这里可以看到相关的资源

65
00:04:34,880 --> 00:04:38,000
集群里的 Service

66
00:04:38,000 --> 00:04:40,400
部署了什么 Service

67
00:04:40,400 --> 00:04:43,600
使用了什么端口

68
00:04:43,600 --> 00:04:47,440
可以看到很多信息

69
00:04:47,440 --> 00:04:49,440
不止如此

70
00:04:49,440 --> 00:04:53,600
我们还可以在仪表盘里面创建和公开 Service

71
00:04:53,600 --> 00:04:59,360
可以创建我们自己的 Service

72
00:04:59,360 --> 00:05:02,160
例如这里的负载均衡器

73
00:05:02,160 --> 00:05:05,120
也可以创建节点

74
00:05:05,120 --> 00:05:07,280
可以做很多事情

75
00:05:07,280 --> 00:05:11,919
Rancher Desktop 可以让你的操作变得简单很多

76
00:05:11,919 --> 00:05:14,160
这也是这个仪表盘的作用

77
00:05:14,160 --> 00:05:17,039
它能简化你的操作

78
00:05:17,440 --> 00:05:23,840
我们可以看到很多信息，例如 IP 地址

79
00:05:23,840 --> 00:05:26,720
选择器，可以选择亲和度，标签

80
00:05:26,720 --> 00:05:29,759
所有 Kubernetes 相关的内容

81
00:05:29,759 --> 00:05:33,520
都可以通过这个漂亮的 UI 进行操作

82
00:05:33,520 --> 00:05:36,880
这里还可以看到存储，存储类

83
00:05:36,880 --> 00:05:40,479
持久卷，ConfigMap

84
00:05:40,479 --> 00:05:45,280
所有你能想象到的资源

85
00:05:45,280 --> 00:05:49,039
几乎都可以在这里找到

86
00:05:49,039 --> 00:05:52,880
例如 K3s 资源

87
00:05:52,880 --> 00:05:59,919
附加组件，K3s 中使用的 Helm Chart，这是我们目前正在使用的

88
00:05:59,919 --> 00:06:04,400
也可以访问集群的 RBAC 并进行交互

89
00:06:04,400 --> 00:06:08,400
你可以看到集群角色、用户角色

90
00:06:08,400 --> 00:06:12,560
可以创建、销毁、交互

91
00:06:12,560 --> 00:06:16,639
都非常轻松容易

92
00:06:16,639 --> 00:06:25,360
我们也可以查看节点以及存储类

93
00:06:25,360 --> 00:06:29,840
这里还有流量，IngressRoute

94
00:06:29,840 --> 00:06:33,680
我们可以看到里面有什么

95
00:06:33,759 --> 00:06:36,800
有 API 资源服务

96
00:06:36,800 --> 00:06:41,120
使用 Rancher，你可以通过 API 做任何事情

97
00:06:41,120 --> 00:06:44,520
这就是今天的所有内容了，感谢观看

